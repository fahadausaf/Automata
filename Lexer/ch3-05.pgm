/* symbol table routine */

/* look up a symbol table, add if not present */
struct symtab *
symlook(s)
char *s;
{
  char *p;
  struct symtab *sp;

  for(sp = symtab; sp < &symtab[NSYMS]; sp++) {
    /* is it already here? */
    if(sp->name && !strcmp(sp->name, s))
      return sp;

    /* is it free */
    if(!sp->name) {
      sp->name = strdup(s);
      return sp;
    }
    /* otherwise continue to next */
  }
  yyerror("Too many symbols");
  exit(1);  /* cannot continue */
} /* symlook */

addfunc(name, func)
char *name;
double (*func)();
{
  struct symtab *sp = symlook(name);
  sp->funcptr = func;
}

main()
{
  extern double sqrt(), exp(), log();

  addfunc("sqrt", sqrt);
  addfunc("exp", exp);
  addfunc("log", log);
  yyparse();
}
