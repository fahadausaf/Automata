def state(state: String, player: Char): String = (state, player) match {
  case ("love", 's')    => "15-love"
  case ("love", 'o')    => "love-15"
  case ("15-love", 's') => "30-all"
  case ("15-love", 'o') => "15-all"
  case ("love-15", 's') => "15-all"
  case ("love-15", 'o') => "love-30"
  case ("15-all", 's')  => "30-15"
  case ("15-all", 'o')  => "15-30"
  case ("30-15", 's')   => "40-15"
  case ("30-15", 'o')   => "30-all"
  case ("15-30", 's')   => "30-all"
  case ("15-30", 'o')   => "15-40"
  case ("30-all", 's')  => "40-30"
  case ("30-all", 'o')  => "30-40"
  case ("40-30", 's')   => "s-wins"
  case ("40-30", 'o')   => "deuce"
  case ("30-40", 's')   => "deuce"
  case ("30-40", 'o')   => "o-wins"
  case ("deuce", 's')   => "ad-in"
  case ("deuce", 'o')   => "ad-out"
  case ("30-love", 's') => "40-love"
  case ("30-love", 'o') => "30-15"
  case ("love-30", 's') => "15-30"
  case ("love-30", 'o') => "love-40"
  case ("40-love", 's') => "s-wins"
  case ("40-love", 'o') => "40-15"
  case ("love-40", 's') => "15-40"
  case ("love-40", 'o') => "o-wins"
  case ("40-15", 's')   => "s-wins"
  case ("40-15", 'o')   => "40-30"
  case ("15-40", 's')   => "30-40"
  case ("15-40", 'o')   => "o-wins"
  case ("s-wins", 's')  => "s-wins"
  case ("s-wins", 'o')  => "s-wins"
  case ("o-wins", 's')  => "o-wins"
  case ("o-wins", 'o')  => "o-wins"
  case ("add-in", 's')  => "s-wins"
  case ("add-in", 'o')  => "deuce"
  case ("add-out", 's') => "deuce"
  case ("add-out", 'o') => "o-wins"
  case (_, _)           => "trap"
}

def game(startState: String, moves: List[Char]): String = (startState, moves) match {
  case (s, x :: Nil) => state(s, x)
  case (s, x :: xs)  => game(state(s, x), xs)
}

println(game("love", "sossos".toList))
